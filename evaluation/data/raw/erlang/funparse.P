-file("test/system/doc/programming_examples/funparse.erl", 1).

-module(funparse).

-compile(export_all).

-import(lists, [reverse/1]).

parse(List) ->
    (grammar())(List).

grammar() ->
    pand(por(pconst(a), pconst(b)), por(pconst(c), pconst(d))).

pconst(X) ->
    fun(T) ->
           case T of
               [X|T1] ->
                   {ok,{const,X},T1};
               _ ->
                   fail
           end
    end.

por(P1, P2) ->
    fun(T) ->
           case P1(T) of
               {ok,R,T1} ->
                   {ok,{'or',1,R},T1};
               fail ->
                   case P2(T) of
                       {ok,R1,T1} ->
                           {ok,{'or',2,R1},T1};
                       fail ->
                           fail
                   end
           end
    end.

pand(P1, P2) ->
    fun(T) ->
           case P1(T) of
               {ok,R1,T1} ->
                   case P2(T1) of
                       {ok,R2,T2} ->
                           {ok,{'and',R1,R2}};
                       fail ->
                           fail
                   end;
               fail ->
                   fail
           end
    end.



