-file("test/lib/stdlib/test/dummy1_h.erl", 1).

-module(dummy1_h).

-export([init/1,
         handle_event/2,
         handle_call/2,
         handle_info/2,
         terminate/2,
         format_status/2]).

init(make_error) ->
    {error,my_error};
init({_,error}) ->
    non_existing;
init({swap,{ok,OldState}}) ->
    {ok,OldState};
init([Parent]) ->
    {ok,Parent}.

handle_event(delete_event, _Parent) ->
    remove_handler;
handle_event(do_crash, _State) ->
    error({badmatch,4});
handle_event(hibernate, Parent) ->
    {ok,Parent};
handle_event(wakeup, Parent) ->
    {ok,Parent,hibernate};
handle_event(Event, Parent) ->
    Parent ! {dummy1_h,Event},
    {ok,Parent}.

handle_call(delete_call, _State) ->
    {remove_handler,ok};
handle_call(_Query, State) ->
    {ok,ok,State}.

handle_info(delete_info, _Parent) ->
    remove_handler;
handle_info(do_crash, _State) ->
    error({badmatch,4});
handle_info(gnurf, Parent) ->
    {ok,Parent,hibernate};
handle_info(Info, Parent) ->
    Parent ! {dummy1_h,Info},
    {ok,Parent}.

terminate(return_hej, _State) ->
    return_hej;
terminate(remove_handler, Parent) ->
    Parent ! {dummy1_h,removed};
terminate(_Reason, _State) ->
    ok.

format_status(_Opt, [_PDict,_State]) ->
    "dummy1_h handler state".



