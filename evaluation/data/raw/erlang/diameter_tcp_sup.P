-file("test/lib/diameter/src/transport/diameter_tcp_sup.erl", 1).

-module(diameter_tcp_sup).

-behaviour(supervisor).

-export([start/0,start_child/1]).

-export([start_link/1,init/1]).

start() ->
    diameter_transport_sup:start_child(diameter_tcp_transport_sup,
                                       diameter_tcp_sup),
    diameter_transport_sup:start_child(diameter_tcp_listener_sup,
                                       diameter_tcp_sup),
    diameter_transport_sup:start_child(diameter_tcp_monitor_sup,
                                       diameter_tcp_sup).

start_child(T) ->
    SupRef =
        case element(1, T) of
            accept ->
                diameter_tcp_transport_sup;
            connect ->
                diameter_tcp_transport_sup;
            listen ->
                diameter_tcp_listener_sup;
            monitor ->
                diameter_tcp_monitor_sup
        end,
    supervisor:start_child(SupRef, [T]).

start_link(Name) ->
    supervisor:start_link({local,Name}, diameter_tcp_sup, []).

init([]) ->
    Mod = diameter_tcp,
    Flags = {simple_one_for_one,0,1},
    ChildSpec = {Mod,{Mod,start_link,[]},temporary,1000,worker,[Mod]},
    {ok,{Flags,[ChildSpec]}}.



