-file("test/lib/kernel/test/application_SUITE_data/group_leader.erl", 1).

-module(group_leader).

-behaviour(gen_server).

-export([start_link/0,code_change/3]).

-export([init/1,handle_call/3,handle_cast/2,handle_info/2,terminate/2]).

start_link() ->
    gen_server:start_link({local,aa}, group_leader, [], []).

init([]) ->
    Self = self(),
    Pid =
        spawn(fun() ->
                     stupid_child(Self)
              end),
    receive
        {Pid,registration_done} ->
            ok
    end,
    process_flag(trap_exit, true),
    {ok,state}.

handle_call(transient, _From, State) ->
    X = application:get_all_env(transient),
    {reply,X,State}.

handle_cast(transient, State) ->
    {noreply,State}.

handle_info(_, State) ->
    {noreply,State}.

terminate(_Reason, _State) ->
    ok.

code_change(_OldVsn, State, _Extra) ->
    {ok,State}.

stupid_child(Parent) ->
    register(nisse, self()),
    Parent ! {self(),registration_done},
    receive
        _Msg ->
            ok
    end.



