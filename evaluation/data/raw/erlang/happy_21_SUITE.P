-file("test/lib/common_test/test/ct_smoke_test_SUITE_data/happy_2_test/happy_21_SUITE.erl",
      1).

-module(happy_21_SUITE).

-compile(export_all).

-file("/usr/local/Cellar/erlang/R15B03-1/lib/erlang/lib/common_test-1.6.3/include/ct.hrl",
      1).

-file("/usr/local/Cellar/erlang/R15B03-1/lib/erlang/lib/test_server-3.5.3/include/test_server.hrl",
      1).

-file("/usr/local/Cellar/erlang/R15B03-1/lib/erlang/lib/common_test-1.6.3/include/ct.hrl",
      21).

-file([], 21).

-file("test/lib/common_test/test/ct_smoke_test_SUITE_data/happy_2_test/happy_21_SUITE.erl",
      30).

suite() ->
    [{timetrap,{seconds,10}},
     {require,v1},
     {userdata,{info,"Happy test of CT callback functions."}}].

init_per_suite(Config) ->
    [{ips,ips_data}|Config].

end_per_suite(Config) ->
    ips_data = test_server:lookup_config(ips, Config).

init_per_testcase(TestCase, Config) ->
    [{TestCase,{TestCase,data}}|Config].

end_per_testcase(TestCase, Config) ->
    {TestCase,data} = test_server:lookup_config(TestCase, Config).

sequences() ->
    [{seq1,[seq1_tc1,seq1_tc2]},{seq2,[seq2_tc1,seq2_tc2]}].

all() ->
    [tc1,tc2,seq1,tc3,seq2,tc4].

tc1() ->
    [{userdata,{info,"This is a testcase"}}].

tc1(Config) ->
    ips_data = test_server:lookup_config(ips, Config),
    {tc1,data} = test_server:lookup_config(tc1, Config),
    apple = ct:get_config(v1),
    ok.

tc2() ->
    [{timetrap,5000},{require,v2}].

tc2(Config) ->
    ips_data = test_server:lookup_config(ips, Config),
    undefined = test_server:lookup_config(tc1, Config),
    {tc2,data} = test_server:lookup_config(tc2, Config),
    plum = ct:get_config(v2),
    ok.

tc3() ->
    [{timetrap,{minutes,1}}].

tc3(_Config) ->
    ok = ct:require(v3),
    [{v31,cherry},{v32,banana},{v33,coconut}] = ct:get_config(v3),
    banana = ct:get_config({v3,v32}),
    ok.

tc4(Config) ->
    {skip,"Skipping this one"}.

seq1_tc1(_) ->
    ok.

seq1_tc2(_) ->
    ok.

seq2_tc1(_) ->
    ok.

seq2_tc2(_) ->
    ok.



